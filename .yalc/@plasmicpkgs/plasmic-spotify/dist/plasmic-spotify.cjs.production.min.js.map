{"version":3,"file":"plasmic-spotify.cjs.production.min.js","sources":["../src/spotify.tsx","../src/index.tsx"],"sourcesContent":["import { ComponentMeta } from \"@plasmicapp/host\";\n\nimport React from \"react\";\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-spotify\";\n\ninterface SpotifyProps {\n  theme?: boolean;\n  url?: string;\n  className?: string;\n}\n\nexport const SpotifyMeta: ComponentMeta<SpotifyProps> = {\n  name: \"Spotify\",\n  displayName: \"Spotify\",\n  importName: \"Spotify\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Spotify Player\",\n  props: {\n    url: {\n      type: \"string\",\n      displayName: \"URL\",\n      description: \"Song URL\",\n      defaultValue:\n        \"https://open.spotify.com/embed/track/3rmo8F54jFF8OgYsqTxm5d\",\n    },\n    theme: {\n      type: \"boolean\",\n      displayName: \"Theme\",\n      description: \"Theme\",\n    },\n\n  },\n};\n\nexport function Spotify({\n  className,\n  url,\n  theme,\n}: SpotifyProps) {\n  const value = theme ? \"1\" : \"0\"\n  const query = `${url}?utm_source=generator&theme=${value}`;\n  return (\n    <iframe\n      src={query}\n      frameBorder=\"0\"\n      scrolling=\"no\"\n      width=\"400\"\n      height=\"166\"\n      className={className}\n    />\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport {\n  Spotify,\n  SpotifyMeta,\n} from \"./spotify\";\n\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n    _registerComponent(Spotify, SpotifyMeta);\n  }\n}\n\nexport * from \"./spotify\";"],"names":["SpotifyMeta","name","displayName","importName","importPath","providesData","description","props","url","type","defaultValue","theme","Spotify","React","src","frameBorder","scrolling","width","height","className","x","Error","loader","Component","defaultMeta","registerComponent"],"mappings":"uNAoBaA,EAA2C,CACtDC,KAAM,UACNC,YAAa,UACbC,WAAY,UACZC,WAZiB,+BAajBC,cAAc,EACdC,YAAa,iBACbC,MAAO,CACLC,IAAK,CACHC,KAAM,SACNP,YAAa,MACbI,YAAa,WACbI,aACE,+DAEJC,MAAO,CACLF,KAAM,UACNP,YAAa,QACbI,YAAa,oBAMHM,YAQZC,0BACEC,MAPJN,sCACAG,MAEsB,IAAM,KAKxBI,YAAY,IACZC,UAAU,KACVC,MAAM,MACNC,OAAO,MACPC,YAbJA,4EA1CwBC,MACpBA,MAAAA,QAEI,IAAIC,oDAEHD,gCCEiBE,OAKxBC,EACAC,EASEF,IAVFC,EAWmBX,EAVnBY,EAU4BxB,EARxBsB,EACFA,EAAOG,kBAAkBF,EAAWC,GAEpCC,EAAkBF,EAAWC"}