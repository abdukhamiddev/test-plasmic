{"version":3,"file":"plasmic-spotify.cjs.development.js","sources":["../src/spotify.tsx","../src/index.tsx"],"sourcesContent":["import { ComponentMeta } from \"@plasmicapp/host\";\n\nimport React from \"react\";\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-spotify\";\n\ninterface SpotifyProps {\n  theme?: boolean;\n  url?: string;\n  className?: string;\n}\n\nexport const SpotifyMeta: ComponentMeta<SpotifyProps> = {\n  name: \"Spotify\",\n  displayName: \"Spotify\",\n  importName: \"Spotify\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Spotify Player\",\n  props: {\n    url: {\n      type: \"string\",\n      displayName: \"URL\",\n      description: \"Song URL\",\n      defaultValue:\n        \"https://open.spotify.com/embed/track/3rmo8F54jFF8OgYsqTxm5d\",\n    },\n    theme: {\n      type: \"boolean\",\n      displayName: \"Theme\",\n      description: \"Theme\",\n    },\n\n  },\n};\n\nexport function Spotify({\n  className,\n  url,\n  theme,\n}: SpotifyProps) {\n  const value = theme ? \"1\" : \"0\"\n  const query = `${url}?utm_source=generator&theme=${value}`;\n  return (\n    <iframe\n      src={query}\n      frameBorder=\"0\"\n      scrolling=\"no\"\n      width=\"400\"\n      height=\"166\"\n      className={className}\n    />\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport {\n  Spotify,\n  SpotifyMeta,\n} from \"./spotify\";\n\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n    _registerComponent(Spotify, SpotifyMeta);\n  }\n}\n\nexport * from \"./spotify\";"],"names":["ensure","x","undefined","Error","modulePath","SpotifyMeta","name","displayName","importName","importPath","providesData","description","props","url","type","defaultValue","theme","Spotify","className","value","query","React","src","frameBorder","scrolling","width","height","registerAll","loader","_registerComponent","Component","defaultMeta","registerComponent"],"mappings":";;;;;;;;;SAGgBA,OAAUC;AACxB,MAAIA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKC,SAAxB,EAAmC;AACjC;AACA,UAAM,IAAIC,KAAJ,uCAAN;AACD,GAHD,MAGO;AACL,WAAOF,CAAP;AACD;AACF;AAED,IAAMG,UAAU,GAAG,8BAAnB;IAQaC,WAAW,GAAgC;AACtDC,EAAAA,IAAI,EAAE,SADgD;AAEtDC,EAAAA,WAAW,EAAE,SAFyC;AAGtDC,EAAAA,UAAU,EAAE,SAH0C;AAItDC,EAAAA,UAAU,EAAEL,UAJ0C;AAKtDM,EAAAA,YAAY,EAAE,IALwC;AAMtDC,EAAAA,WAAW,EAAE,gBANyC;AAOtDC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE;AACHC,MAAAA,IAAI,EAAE,QADH;AAEHP,MAAAA,WAAW,EAAE,KAFV;AAGHI,MAAAA,WAAW,EAAE,UAHV;AAIHI,MAAAA,YAAY,EACV;AALC,KADA;AAQLC,IAAAA,KAAK,EAAE;AACLF,MAAAA,IAAI,EAAE,SADD;AAELP,MAAAA,WAAW,EAAE,OAFR;AAGLI,MAAAA,WAAW,EAAE;AAHR;AARF;AAP+C;SAwBxCM;MACdC,iBAAAA;MACAL,WAAAA;MACAG,aAAAA;AAEA,MAAMG,KAAK,GAAGH,KAAK,GAAG,GAAH,GAAS,GAA5B;AACA,MAAMI,KAAK,GAAMP,GAAN,oCAAwCM,KAAnD;AACA,SACEE,mBAAA,SAAA;AACEC,IAAAA,GAAG,EAAEF;AACLG,IAAAA,WAAW,EAAC;AACZC,IAAAA,SAAS,EAAC;AACVC,IAAAA,KAAK,EAAC;AACNC,IAAAA,MAAM,EAAC;AACPR,IAAAA,SAAS,EAAEA;GANb,CADF;AAUD;;SCnDeS,YAAYC;AAI1B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBC,SADyB,EAEzBC,WAFyB;AAIzB,QAAIH,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACI,iBAAP,CAAyBF,SAAzB,EAAoCC,WAApC;AACD,KAFD,MAEO;AACLC,MAAAA,iBAAiB,CAACF,SAAD,EAAYC,WAAZ,CAAjB;AACD;AACF,GATD;;AAWA,MAAIH,MAAJ,EAAY;AACVC,IAAAA,kBAAkB,CAACZ,OAAD,EAAUZ,WAAV,CAAlB;AACD;AACF;;;;;;;"}