{"version":3,"file":"plasmic-pigeon-maps.cjs.production.min.js","sources":["../src/pigeon.tsx","../src/index.tsx"],"sourcesContent":["import { ComponentMeta } from \"@plasmicapp/host\";\nimport { Map, Marker } from \"pigeon-maps\";\nimport React from \"react\";\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-pigeon-maps\";\n\ninterface PigeonMapsProps {\n  provider?: string;\n  latitude?: number;\n  longitude?: number;\n  zoomLevel?: number;\n  width?: number;\n  height?: number;\n  animate?: boolean;\n  zoomSnap?: boolean;\n  metaWheelZoom?: boolean;\n  twoFingerDrag?: boolean;\n  className?: string;\n}\n\nexport const PigeonMapsMeta: ComponentMeta<PigeonMapsProps> = {\n  name: \"PigeonMaps\",\n  displayName: \"Pigeon Maps\",\n  importName: \"PigeonMaps\",\n  importPath: modulePath,\n  providesData: true,\n  defaultStyles: {\n    width: \"400px\",\n    height: \"600px\",\n  },\n  props: {\n    latitude: {\n      type: \"number\",\n      displayName: \"Latitude\",\n      description: \"Latitude\",\n      defaultValue: 41.2825125,\n    },\n    longitude: {\n      type: \"number\",\n      displayName: \"Longitude\",\n      description: \"Longitude\",\n      defaultValue: 69.139281,\n    },\n    zoomLevel: {\n      type: \"number\",\n      displayName: \"Zoom\",\n      description: \"Current zoom level [1...18]\",\n      defaultValue: 10,\n    },\n    animate: {\n      type: \"boolean\",\n      displayName: \"Animations\",\n      description: \"Animations enabled\",\n      defaultValue: true,\n    },\n    zoomSnap: {\n      type: \"boolean\",\n      displayName: \"Zoom Snap\",\n      description:\n        \"Snap to discrete zoom increments (14, 15, 16, etc) when scrolling with the mouse or pinching with touch events\",\n      defaultValue: true,\n    },\n    metaWheelZoom: {\n      type: \"boolean\",\n      displayName: \"Meta Wheel Zoom\",\n      description:\n        \"Zooming with the mouse wheel only works when you hold down the cmd or ctrl keys\",\n      defaultValue: false,\n    },\n    twoFingerDrag: {\n      type: \"boolean\",\n      displayName: \"Two Finger Drag\",\n      description: \"Moving the map requires touching with two fingers\",\n      defaultValue: false,\n    },\n  },\n};\n\nexport function PigeonMaps({\n  latitude,\n  longitude,\n  zoomLevel,\n  animate,\n  zoomSnap,\n  metaWheelZoom,\n  twoFingerDrag,\n  className,\n}: PigeonMapsProps) {\n  const [zoom, setZoom] = React.useState(zoomLevel);\n\n  return (\n    <div className={className}>\n      <Map\n        defaultCenter={[latitude!, longitude!]}\n        zoom={zoom}\n        animate={animate}\n        zoomSnap={zoomSnap}\n        onBoundsChanged={({ zoom }) => {\n          setZoom(zoom);\n        }}\n        metaWheelZoom={metaWheelZoom}\n        twoFingerDrag={twoFingerDrag}\n      >\n        <Marker width={50} anchor={[latitude!, longitude!]} />\n      </Map>\n    </div>\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport {\n  PigeonMaps,\n  PigeonMapsMeta\n} from \"./pigeon\";\n\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n    _registerComponent(PigeonMaps, PigeonMapsMeta);\n  }\n}\n\nexport * from \"./pigeon\";"],"names":["PigeonMapsMeta","name","displayName","importName","importPath","providesData","defaultStyles","width","height","props","latitude","type","description","defaultValue","longitude","zoomLevel","animate","zoomSnap","metaWheelZoom","twoFingerDrag","PigeonMaps","className","React","useState","setZoom","Map","defaultCenter","zoom","onBoundsChanged","Marker","anchor","x","Error","loader","Component","defaultMeta","registerComponent"],"mappings":"gPA6BaA,EAAiD,CAC5DC,KAAM,aACNC,YAAa,cACbC,WAAY,aACZC,WApBiB,mCAqBjBC,cAAc,EACdC,cAAe,CACbC,MAAO,QACPC,OAAQ,SAEVC,MAAO,CACLC,SAAU,CACRC,KAAM,SACNT,YAAa,WACbU,YAAa,WACbC,aAAc,YAEhBC,UAAW,CACTH,KAAM,SACNT,YAAa,YACbU,YAAa,YACbC,aAAc,WAEhBE,UAAW,CACTJ,KAAM,SACNT,YAAa,OACbU,YAAa,8BACbC,aAAc,IAEhBG,QAAS,CACPL,KAAM,UACNT,YAAa,aACbU,YAAa,qBACbC,cAAc,GAEhBI,SAAU,CACRN,KAAM,UACNT,YAAa,YACbU,YACE,iHACFC,cAAc,GAEhBK,cAAe,CACbP,KAAM,UACNT,YAAa,kBACbU,YACE,kFACFC,cAAc,GAEhBM,cAAe,CACbR,KAAM,UACNT,YAAa,kBACbU,YAAa,oDACbC,cAAc,cAKJO,SACdV,IAAAA,SACAI,IAAAA,UAEAE,IAAAA,QACAC,IAAAA,SACAC,IAAAA,cACAC,IAAAA,cACAE,IAAAA,YAEwBC,EAAMC,WAP9BR,WAOaS,cAGXF,uBAAKD,UAAWA,GACdC,gBAACG,OACCC,cAAe,CAAChB,EAAWI,GAC3Ba,UACAX,QAASA,EACTC,SAAUA,EACVW,gBAAiB,YACfJ,IADkBG,OAGpBT,cAAeA,EACfC,cAAeA,GAEfG,gBAACO,UAAOtB,MAAO,GAAIuB,OAAQ,CAACpB,EAAWI,6EA5GrBiB,MACpBA,MAAAA,QAEI,IAAIC,oDAEHD,gCCCiBE,OAKxBC,EACAC,EASEF,IAVFC,EAWmBd,EAVnBe,EAU+BnC,EAR3BiC,EACFA,EAAOG,kBAAkBF,EAAWC,GAEpCC,EAAkBF,EAAWC"}