{"version":3,"file":"plasmic-typeform.cjs.development.js","sources":["../src/typeform.tsx","../src/index.tsx"],"sourcesContent":["import { ComponentMeta } from \"@plasmicapp/host\";\n\nimport React from \"react\";\nimport { Widget } from \"@typeform/embed-react\";\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-typeform\";\n\ninterface TypeformProps {\n  className?: string;\n  formId?: string;\n}\n\nexport const TypeformMeta: ComponentMeta<TypeformProps> = {\n  name: \"TypeForm\",\n  displayName: \"Typeform\",\n  importName: \"Typeform\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Embed Typeform on your website\",\n  defaultStyles: {\n    width: \"600px\",\n    height: \"700px\"\n  },\n  props: {\n    formId: {\n      type: \"string\",\n      displayName: \"Form ID\",\n      description: \"ID of your form in Typeform\",\n      defaultValue: \"R2s5BM\",\n      helpText:`You can find <form-id> from the public URL of your form. For example (https://form.typeform.com/to/<form-id>). Or from admin panel URL (https://admin.typeform.com/form/<form-id>/*)`\n    \n    },\n  },\n};\n\nexport function Typeform({ className, formId }: TypeformProps) {\n  if (!formId) {\n    return <div>Please specify a Form ID</div>;\n  }\n\n  return (\n\n    <div className={className}>\n      <Widget id={formId!} style={{ width: \"100%\", height: \"100%\" }} className={className} />\n    </div>\n\n\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport {\n  Typeform,\n  TypeformMeta,\n\n\n} from \"./typeform\";\n\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n\n    _registerComponent(Typeform, TypeformMeta);\n\n  }\n}\n\nexport * from \"./typeform\";"],"names":["ensure","x","undefined","Error","modulePath","TypeformMeta","name","displayName","importName","importPath","providesData","description","defaultStyles","width","height","props","formId","type","defaultValue","helpText","Typeform","className","React","Widget","id","style","registerAll","loader","_registerComponent","Component","defaultMeta","registerComponent"],"mappings":";;;;;;;;;;SAIgBA,OAAUC;AACxB,MAAIA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKC,SAAxB,EAAmC;AACjC;AACA,UAAM,IAAIC,KAAJ,uCAAN;AACD,GAHD,MAGO;AACL,WAAOF,CAAP;AACD;AACF;AAED,IAAMG,UAAU,GAAG,+BAAnB;IAOaC,YAAY,GAAiC;AACxDC,EAAAA,IAAI,EAAE,UADkD;AAExDC,EAAAA,WAAW,EAAE,UAF2C;AAGxDC,EAAAA,UAAU,EAAE,UAH4C;AAIxDC,EAAAA,UAAU,EAAEL,UAJ4C;AAKxDM,EAAAA,YAAY,EAAE,IAL0C;AAMxDC,EAAAA,WAAW,EAAE,gCAN2C;AAOxDC,EAAAA,aAAa,EAAE;AACbC,IAAAA,KAAK,EAAE,OADM;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAPyC;AAWxDC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,QADA;AAENV,MAAAA,WAAW,EAAE,SAFP;AAGNI,MAAAA,WAAW,EAAE,6BAHP;AAINO,MAAAA,YAAY,EAAE,QAJR;AAKNC,MAAAA,QAAQ;AALF;AADH;AAXiD;SAuB1CC;MAAWC,iBAAAA;MAAWL,cAAAA;;AACpC,MAAI,CAACA,MAAL,EAAa;AACX,WAAOM,mBAAA,MAAA,MAAA,4BAAA,CAAP;AACD;;AAED,SAEEA,mBAAA,MAAA;AAAKD,IAAAA,SAAS,EAAEA;GAAhB,EACEC,mBAAA,CAACC,iBAAD;AAAQC,IAAAA,EAAE,EAAER;AAASS,IAAAA,KAAK,EAAE;AAAEZ,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB;AAAmCO,IAAAA,SAAS,EAAEA;GAA1E,CADF,CAFF;AAQD;;SC5CeK,YAAYC;AAI1B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBC,SADyB,EAEzBC,WAFyB;AAIzB,QAAIH,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACI,iBAAP,CAAyBF,SAAzB,EAAoCC,WAApC;AACD,KAFD,MAEO;AACLC,MAAAA,iBAAiB,CAACF,SAAD,EAAYC,WAAZ,CAAjB;AACD;AACF,GATD;;AAWA,MAAIH,MAAJ,EAAY;AAEVC,IAAAA,kBAAkB,CAACR,QAAD,EAAWf,YAAX,CAAlB;AAED;AACF;;;;;;;"}