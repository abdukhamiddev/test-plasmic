{"version":3,"file":"plasmic-eventbrite.cjs.production.min.js","sources":["../src/hooks/useEventBrite.ts","../src/eventbrite.tsx","../src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nconst TAG_ID = `EB_SCRIPT_${uuid()}`;\nconst SCRIPT_URL = \"https://www.eventbrite.com/static/widgets/eb_widgets.js\";\n\ninterface Props {\n    eventId?: string;\n    modal?: boolean;\n    onOrderComplete: () => void;\n    promoCode?: string;\n    iFrameHeight?: string;\n    iFrameAutoAdapt?: string;\n}\ntype Widget = {\n    widgetType?: string;\n    eventId?: string;\n    onOrderComplete: () => void;\n    modal?: boolean;\n    modalTriggerElementId?: string;\n    promoCode?: string;\n    iframeContainerId?: string;\n}\nconst useEventbrite = ({\n    eventId,\n    modal,\n    onOrderComplete,\n    promoCode,\n}: Props) => {\n    const id = `EB_${uuid()}`;\n    const [isLoaded, setLoaded] = React.useState(false);\n    const onLoad = React.useCallback(() => setLoaded(true), [setLoaded]);\n    const onErr = React.useCallback(\n        (e) => {\n            console.error(`Failed to load Eventbrite script from ${SCRIPT_URL}`);\n            console.error(e);\n\n            setLoaded(false);\n        },\n        [setLoaded]\n    );\n\n    React.useEffect(() => {\n        //@ts-ignore\n        if (globalThis.window?.EBWidgets) {\n            setLoaded(true);\n            return;\n        }\n        const existing = document.getElementById(TAG_ID);\n        if (existing) {\n            existing.remove();\n        }\n        const script = document.createElement(\"script\");\n        script.id = TAG_ID;\n        script.async = true;\n        script.src = SCRIPT_URL;\n        script.addEventListener(\"load\", onLoad);\n        script.addEventListener(\"error\", onErr);\n        script.addEventListener(\"abort\", onErr);\n        document.head.appendChild(script);\n\n        return () => {\n            script.removeEventListener(\"load\", onLoad);\n            script.removeEventListener(\"error\", onErr);\n            script.removeEventListener(\"abort\", onErr);\n            script.remove();\n            setLoaded(false);\n        };\n    }, [setLoaded, onLoad, onErr]);\n\n    React.useEffect(() => {\n        if (!isLoaded) {\n            return;\n        }\n\n        const config: Widget = {\n            widgetType: \"checkout\",\n            eventId,\n            onOrderComplete,\n            modal,\n        };\n\n        if (modal) {\n            config.modalTriggerElementId = id;\n        } else {\n            config.iframeContainerId = id;\n        }\n\n        if (promoCode) {\n            config.promoCode = promoCode;\n        }\n        //@ts-ignore\n        globalThis.window?.EBWidgets.createWidget(config);\n    }, [isLoaded]);\n\n    return isLoaded ? { id } : null;\n};\n\nexport default useEventbrite;\n","import { ComponentMeta } from \"@plasmicapp/host\";\n\nimport React from \"react\";\nimport useEventbrite from \"./hooks/useEventBrite\";\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-eventbrite\";\n\ninterface EventbriteProps {\n  className?: string;\n  eventId?: string;\n  text?: string;\n}\n\nexport const EventbriteMeta: ComponentMeta<EventbriteProps> = {\n  name: \"Eventbrite\",\n  displayName: \"EventBrite\",\n  importName: \"Eventbrite\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Shows Eventbrite checkout on your website\",\n  defaultStyles: {\n    color: \"#ffffff\",\n    fontSize: \"12px\",\n    width: \"100px\",\n    height: \"25px\",\n    borderWidth: \"0px\",\n    backgroundColor: \"#19aee7\",\n    borderRadius: \"4px\",\n  },\n  props: {\n    eventId: {\n      type: \"string\",\n      displayName: \"Event ID\",\n      description: `Learn how to get event ID (\"https://www.eventbrite.com/platform/docs/events\")`,\n      defaultValue: \"463676879027\",\n      helpText:\n        \"In the URL field at the top, you see something like https://www.eventbrite.com/myevent?eid=123456789 . The number after eid= is the Event ID\",\n    },\n    text: {\n      type: \"string\",\n      displayName: \"Label\",\n      description: \"Label\",\n      defaultValue: \"Buy tickets\",\n    },\n  },\n};\n\nexport function Eventbrite({ className, text, eventId }: EventbriteProps) {\n  \n  if (!eventId) {\n    return <div>Please enter Event Id</div>;\n  }\n\n  const handleOrderCompleted = React.useCallback(() => {\n    console.log(\"Order was completed successfully\");\n  }, []);\n\n  const modalButtonCheckout = useEventbrite({\n    eventId: `${eventId!}`,\n    modal: true,\n    onOrderComplete: handleOrderCompleted,\n  });\n\n  return (\n    <button className={className} id={modalButtonCheckout?.id} type=\"button\">\n      {text}\n    </button>\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport { Eventbrite, EventbriteMeta } from \"./eventbrite\";\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n    _registerComponent(Eventbrite, EventbriteMeta);\n  }\n}\nexport * from \"./eventbrite\";\n"],"names":["TAG_ID","uuid","SCRIPT_URL","EventbriteMeta","name","displayName","importName","importPath","providesData","description","defaultStyles","color","fontSize","width","height","borderWidth","backgroundColor","borderRadius","props","eventId","type","defaultValue","helpText","text","Eventbrite","className","React","modalButtonCheckout","modal","onOrderComplete","promoCode","id","useState","isLoaded","setLoaded","onLoad","useCallback","onErr","e","console","error","useEffect","globalThis","window","_globalThis$window","EBWidgets","existing","document","getElementById","remove","script","createElement","async","src","addEventListener","head","appendChild","removeEventListener","config","widgetType","modalTriggerElementId","iframeContainerId","_globalThis$window2","createWidget","useEventbrite","log","x","Error","loader","Component","defaultMeta","registerComponent"],"mappings":"yOAGMA,eAAsBC,OACtBC,EAAa,0DCkBNC,EAAiD,CAC5DC,KAAM,aACNC,YAAa,aACbC,WAAY,aACZC,WAZiB,kCAajBC,cAAc,EACdC,YAAa,4CACbC,cAAe,CACbC,MAAO,UACPC,SAAU,OACVC,MAAO,QACPC,OAAQ,OACRC,YAAa,MACbC,gBAAiB,UACjBC,aAAc,OAEhBC,MAAO,CACLC,QAAS,CACPC,KAAM,SACNf,YAAa,WACbI,4FACAY,aAAc,eACdC,SACE,gJAEJC,KAAM,CACJH,KAAM,SACNf,YAAa,QACbI,YAAa,QACbY,aAAc,0BAKJG,SAAaC,IAAAA,UAAWF,IAAAA,KAAMJ,IAAAA,QAE5C,IAAKA,EACH,OAAOO,oDAGT,IAIMC,ED3Cc,gBAClBR,IAAAA,QACAS,IAAAA,MACAC,IAAAA,gBACAC,IAAAA,UAEMC,QAAW9B,SACayB,EAAMM,UAAS,GAAtCC,OAAUC,OACXC,EAAST,EAAMU,aAAY,WAAA,OAAMF,GAAU,KAAO,CAACA,IACnDG,EAAQX,EAAMU,aAChB,SAACE,GACGC,QAAQC,+CAA+CtC,GACvDqC,QAAQC,MAAMF,GAEdJ,GAAU,KAEd,CAACA,IAwDL,OArDAR,EAAMe,WAAU,iBAEZ,YAAIC,WAAWC,UAAXC,EAAmBC,UAAvB,CAIA,IAAMC,EAAWC,SAASC,eAAehD,GACrC8C,GACAA,EAASG,SAEb,IAAMC,EAASH,SAASI,cAAc,UAStC,OARAD,EAAOnB,GAAK/B,EACZkD,EAAOE,OAAQ,EACfF,EAAOG,IAAMnD,EACbgD,EAAOI,iBAAiB,OAAQnB,GAChCe,EAAOI,iBAAiB,QAASjB,GACjCa,EAAOI,iBAAiB,QAASjB,GACjCU,SAASQ,KAAKC,YAAYN,GAEnB,WACHA,EAAOO,oBAAoB,OAAQtB,GACnCe,EAAOO,oBAAoB,QAASpB,GACpCa,EAAOO,oBAAoB,QAASpB,GACpCa,EAAOD,SACPf,GAAU,IArBVA,GAAU,KAuBf,CAACA,EAAWC,EAAQE,IAEvBX,EAAMe,WAAU,iBACZ,GAAKR,EAAL,CAIA,IAAMyB,EAAiB,CACnBC,WAAY,WACZxC,QAAAA,EACAU,gBAAAA,EACAD,MAAAA,GAGAA,EACA8B,EAAOE,sBAAwB7B,EAE/B2B,EAAOG,kBAAoB9B,EAG3BD,IACA4B,EAAO5B,UAAYA,YAGvBY,WAAWC,SAAXmB,EAAmBjB,UAAUkB,aAAaL,MAC3C,CAACzB,IAEGA,EAAW,CAAEF,GAAAA,GAAO,KC7BDiC,CAAc,CACxC7C,WAAYA,EACZS,OAAO,EACPC,gBAP2BH,EAAMU,aAAY,WAC7CG,QAAQ0B,IAAI,sCACX,MAQH,OACEvC,0BAAQD,UAAWA,EAAWM,SAAIJ,SAAAA,EAAqBI,GAAIX,KAAK,UAC7DG,yEArEmB2C,GACxB,GAAIA,MAAAA,EAEF,MAAM,IAAIC,6CAEV,OAAOD,gCCLiBE,GAI1B,IACEC,EACAC,EASEF,IAVFC,EAWmB7C,EAVnB8C,EAU+BnE,EAR3BiE,EACFA,EAAOG,kBAAkBF,EAAWC,GAEpCC,EAAkBF,EAAWC"}