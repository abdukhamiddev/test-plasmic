{"version":3,"file":"plasmic-eventbrite.esm.js","sources":["../src/hooks/useEventBrite.ts","../src/eventbrite.tsx","../src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nconst TAG_ID = `EB_SCRIPT_${uuid()}`;\nconst SCRIPT_URL = \"https://www.eventbrite.com/static/widgets/eb_widgets.js\";\n\ninterface Props {\n    eventId?: string;\n    modal?: boolean;\n    onOrderComplete: () => void;\n    promoCode?: string;\n    iFrameHeight?: string;\n    iFrameAutoAdapt?: string;\n}\ntype Widget = {\n    widgetType?: string;\n    eventId?: string;\n    onOrderComplete: () => void;\n    modal?: boolean;\n    modalTriggerElementId?: string;\n    promoCode?: string;\n    iframeContainerId?: string;\n}\nconst useEventbrite = ({\n    eventId,\n    modal,\n    onOrderComplete,\n    promoCode,\n}: Props) => {\n    const id = `EB_${uuid()}`;\n    const [isLoaded, setLoaded] = React.useState(false);\n    const onLoad = React.useCallback(() => setLoaded(true), [setLoaded]);\n    const onErr = React.useCallback(\n        (e) => {\n            console.error(`Failed to load Eventbrite script from ${SCRIPT_URL}`);\n            console.error(e);\n\n            setLoaded(false);\n        },\n        [setLoaded]\n    );\n\n    React.useEffect(() => {\n        //@ts-ignore\n        if (globalThis.window?.EBWidgets) {\n            setLoaded(true);\n            return;\n        }\n        const existing = document.getElementById(TAG_ID);\n        if (existing) {\n            existing.remove();\n        }\n        const script = document.createElement(\"script\");\n        script.id = TAG_ID;\n        script.async = true;\n        script.src = SCRIPT_URL;\n        script.addEventListener(\"load\", onLoad);\n        script.addEventListener(\"error\", onErr);\n        script.addEventListener(\"abort\", onErr);\n        document.head.appendChild(script);\n\n        return () => {\n            script.removeEventListener(\"load\", onLoad);\n            script.removeEventListener(\"error\", onErr);\n            script.removeEventListener(\"abort\", onErr);\n            script.remove();\n            setLoaded(false);\n        };\n    }, [setLoaded, onLoad, onErr]);\n\n    React.useEffect(() => {\n        if (!isLoaded) {\n            return;\n        }\n\n        const config: Widget = {\n            widgetType: \"checkout\",\n            eventId,\n            onOrderComplete,\n            modal,\n        };\n\n        if (modal) {\n            config.modalTriggerElementId = id;\n        } else {\n            config.iframeContainerId = id;\n        }\n\n        if (promoCode) {\n            config.promoCode = promoCode;\n        }\n        //@ts-ignore\n        globalThis.window?.EBWidgets.createWidget(config);\n    }, [isLoaded]);\n\n    return isLoaded ? { id } : null;\n};\n\nexport default useEventbrite;\n","import { ComponentMeta } from \"@plasmicapp/host\";\n\nimport React from \"react\";\nimport useEventbrite from \"./hooks/useEventBrite\";\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-eventbrite\";\n\ninterface EventbriteProps {\n  className?: string;\n  eventId?: string;\n  text?: string;\n}\n\nexport const EventbriteMeta: ComponentMeta<EventbriteProps> = {\n  name: \"Eventbrite\",\n  displayName: \"EventBrite\",\n  importName: \"Eventbrite\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Shows Eventbrite checkout on your website\",\n  defaultStyles: {\n    color: \"#ffffff\",\n    fontSize: \"12px\",\n    width: \"100px\",\n    height: \"25px\",\n    borderWidth: \"0px\",\n    backgroundColor: \"#19aee7\",\n    borderRadius: \"4px\",\n  },\n  props: {\n    eventId: {\n      type: \"string\",\n      displayName: \"Event ID\",\n      description: `Learn how to get event ID (\"https://www.eventbrite.com/platform/docs/events\")`,\n      defaultValue: \"463676879027\",\n      helpText:\n        \"In the URL field at the top, you see something like https://www.eventbrite.com/myevent?eid=123456789 . The number after eid= is the Event ID\",\n    },\n    text: {\n      type: \"string\",\n      displayName: \"Label\",\n      description: \"Label\",\n      defaultValue: \"Buy tickets\",\n    },\n  },\n};\n\nexport function Eventbrite({ className, text, eventId }: EventbriteProps) {\n  \n  if (!eventId) {\n    return <div>Please enter Event Id</div>;\n  }\n\n  const handleOrderCompleted = React.useCallback(() => {\n    console.log(\"Order was completed successfully\");\n  }, []);\n\n  const modalButtonCheckout = useEventbrite({\n    eventId: `${eventId!}`,\n    modal: true,\n    onOrderComplete: handleOrderCompleted,\n  });\n\n  return (\n    <button className={className} id={modalButtonCheckout?.id} type=\"button\">\n      {text}\n    </button>\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport { Eventbrite, EventbriteMeta } from \"./eventbrite\";\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n    _registerComponent(Eventbrite, EventbriteMeta);\n  }\n}\nexport * from \"./eventbrite\";\n"],"names":["TAG_ID","uuid","SCRIPT_URL","useEventbrite","eventId","modal","onOrderComplete","promoCode","id","React","useState","isLoaded","setLoaded","onLoad","useCallback","onErr","e","console","error","useEffect","globalThis","window","EBWidgets","existing","document","getElementById","remove","script","createElement","async","src","addEventListener","head","appendChild","removeEventListener","config","widgetType","modalTriggerElementId","iframeContainerId","createWidget","ensure","x","undefined","Error","modulePath","EventbriteMeta","name","displayName","importName","importPath","providesData","description","defaultStyles","color","fontSize","width","height","borderWidth","backgroundColor","borderRadius","props","type","defaultValue","helpText","text","Eventbrite","className","handleOrderCompleted","log","modalButtonCheckout","registerAll","loader","_registerComponent","Component","defaultMeta","registerComponent"],"mappings":"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"}