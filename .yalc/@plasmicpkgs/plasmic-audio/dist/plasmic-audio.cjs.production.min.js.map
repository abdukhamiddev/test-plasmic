{"version":3,"file":"plasmic-audio.cjs.production.min.js","sources":["../src/audio.tsx","../src/index.tsx"],"sourcesContent":["import { ComponentMeta } from \"@plasmicapp/host\";\n\nimport React from \"react\";\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-audio\";\n\ninterface Html5AudioProps {\n  className?: string;\n  src?: string;\n  autoPlay?: boolean;\n  muted?: boolean;\n}\n\nexport const Html5AudioMeta: ComponentMeta<Html5AudioProps> = {\n  name: \"Html5Audio\",\n  displayName: \"Html5 Audio\",\n  importName: \"Html5Audio\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Play audio on your website\",\n  props: {\n    src: {\n      type: \"string\",\n      displayName: \"Source URL\",\n      description: \"URL to audio file\",\n      defaultValue: \"https://cdn.bitdegree.org/learn/I_Cactus_-_05_-_ruby_cactus.mp3?raw=true\"\n    },\n    autoPlay: {\n      type: 'boolean',\n      displayName: \"Auto Play\",\n      description: \"Whether the audio automatically start playing when the player loads.\"\n    },\n    muted: {\n      type: \"boolean\",\n      displayName: \"Muted\",\n      description: \"Whether audio should be muted\"\n    }\n  },\n};\n\nexport function Html5Audio({ className, src, autoPlay, muted }: Html5AudioProps) {\n\n  return (\n    <audio className={className} controls muted={muted} autoPlay={autoPlay} >\n      <source src={src} />\n    </audio>\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport {\n  Html5Audio,\n  Html5AudioMeta,\n} from \"./audio\";\n\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n\n    _registerComponent(Html5Audio, Html5AudioMeta);\n\n  }\n}\n\nexport * from \"./audio\";"],"names":["Html5AudioMeta","name","displayName","importName","importPath","providesData","description","props","src","type","defaultValue","autoPlay","muted","Html5Audio","React","className","controls","x","Error","loader","Component","defaultMeta","registerComponent"],"mappings":"uNAsBaA,EAAiD,CAC5DC,KAAM,aACNC,YAAa,cACbC,WAAY,aACZC,WAbiB,6BAcjBC,cAAc,EACdC,YAAa,6BACbC,MAAO,CACLC,IAAK,CACHC,KAAM,SACNP,YAAa,aACbI,YAAa,oBACbI,aAAc,4EAEhBC,SAAU,CACRF,KAAM,UACNP,YAAa,YACbI,YAAa,wEAEfM,MAAO,CACLH,KAAM,UACNP,YAAa,QACbI,YAAa,4CAKHO,YAGZC,yBAAOC,YAHkBA,UAGIC,YAASJ,QAHaA,MAGCD,WAHXA,UAIvCG,0BAAQN,MAJ0BA,6EA7CdS,MACpBA,MAAAA,QAEI,IAAIC,oDAEHD,gCCCiBE,OAKxBC,EACAC,EASEF,IAVFC,EAYmBP,EAXnBQ,EAW+BrB,EAT3BmB,EACFA,EAAOG,kBAAkBF,EAAWC,GAEpCC,EAAkBF,EAAWC"}