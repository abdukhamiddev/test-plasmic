{"version":3,"file":"plasmic-audio.esm.js","sources":["../src/audio.tsx","../src/index.tsx"],"sourcesContent":["import { ComponentMeta } from \"@plasmicapp/host\";\n\nimport React from \"react\";\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-audio\";\n\ninterface Html5AudioProps {\n  className?: string;\n  src?: string;\n  autoPlay?: boolean;\n  muted?: boolean;\n}\n\nexport const Html5AudioMeta: ComponentMeta<Html5AudioProps> = {\n  name: \"Html5Audio\",\n  displayName: \"Html5 Audio\",\n  importName: \"Html5Audio\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Play audio on your website\",\n  props: {\n    src: {\n      type: \"string\",\n      displayName: \"Source URL\",\n      description: \"URL to audio file\",\n      defaultValue: \"https://cdn.bitdegree.org/learn/I_Cactus_-_05_-_ruby_cactus.mp3?raw=true\"\n    },\n    autoPlay: {\n      type: 'boolean',\n      displayName: \"Auto Play\",\n      description: \"Whether the audio automatically start playing when the player loads.\"\n    },\n    muted: {\n      type: \"boolean\",\n      displayName: \"Muted\",\n      description: \"Whether audio should be muted\"\n    }\n  },\n};\n\nexport function Html5Audio({ className, src, autoPlay, muted }: Html5AudioProps) {\n\n  return (\n    <audio className={className} controls muted={muted} autoPlay={autoPlay} >\n      <source src={src} />\n    </audio>\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport {\n  Html5Audio,\n  Html5AudioMeta,\n} from \"./audio\";\n\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n\n    _registerComponent(Html5Audio, Html5AudioMeta);\n\n  }\n}\n\nexport * from \"./audio\";"],"names":["ensure","x","undefined","Error","modulePath","Html5AudioMeta","name","displayName","importName","importPath","providesData","description","props","src","type","defaultValue","autoPlay","muted","Html5Audio","className","React","controls","registerAll","loader","_registerComponent","Component","defaultMeta","registerComponent"],"mappings":";;;SAIgBA,OAAUC;AACxB,MAAIA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKC,SAAxB,EAAmC;AACjC;AACA,UAAM,IAAIC,KAAJ,uCAAN;AACD,GAHD,MAGO;AACL,WAAOF,CAAP;AACD;AACF;AAED,IAAMG,UAAU,GAAG,4BAAnB;IASaC,cAAc,GAAmC;AAC5DC,EAAAA,IAAI,EAAE,YADsD;AAE5DC,EAAAA,WAAW,EAAE,aAF+C;AAG5DC,EAAAA,UAAU,EAAE,YAHgD;AAI5DC,EAAAA,UAAU,EAAEL,UAJgD;AAK5DM,EAAAA,YAAY,EAAE,IAL8C;AAM5DC,EAAAA,WAAW,EAAE,4BAN+C;AAO5DC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE;AACHC,MAAAA,IAAI,EAAE,QADH;AAEHP,MAAAA,WAAW,EAAE,YAFV;AAGHI,MAAAA,WAAW,EAAE,mBAHV;AAIHI,MAAAA,YAAY,EAAE;AAJX,KADA;AAOLC,IAAAA,QAAQ,EAAE;AACRF,MAAAA,IAAI,EAAE,SADE;AAERP,MAAAA,WAAW,EAAE,WAFL;AAGRI,MAAAA,WAAW,EAAE;AAHL,KAPL;AAYLM,IAAAA,KAAK,EAAE;AACLH,MAAAA,IAAI,EAAE,SADD;AAELP,MAAAA,WAAW,EAAE,OAFR;AAGLI,MAAAA,WAAW,EAAE;AAHR;AAZF;AAPqD;SA2B9CO;MAAaC,iBAAAA;MAAWN,WAAAA;MAAKG,gBAAAA;MAAUC,aAAAA;AAErD,SACEG,mBAAA,QAAA;AAAOD,IAAAA,SAAS,EAAEA;AAAWE,IAAAA,QAAQ;AAACJ,IAAAA,KAAK,EAAEA;AAAOD,IAAAA,QAAQ,EAAEA;GAA9D,EACEI,mBAAA,SAAA;AAAQP,IAAAA,GAAG,EAAEA;GAAb,CADF,CADF;AAKD;;SC9CeS,YAAYC;AAI1B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBC,SADyB,EAEzBC,WAFyB;AAIzB,QAAIH,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACI,iBAAP,CAAyBF,SAAzB,EAAoCC,WAApC;AACD,KAFD,MAEO;AACLC,MAAAA,iBAAiB,CAACF,SAAD,EAAYC,WAAZ,CAAjB;AACD;AACF,GATD;;AAWA,MAAIH,MAAJ,EAAY;AAEVC,IAAAA,kBAAkB,CAACN,UAAD,EAAab,cAAb,CAAlB;AAED;AACF;;;;"}